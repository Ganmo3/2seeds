<div class="about-container-fluid">
  <div class="row">
    <div class="col-md-8">
      <div class="section">
        <div class="site-tite-container text-center">
          <p class="site-title glowAnime" id="site-title">2Seeds</p>
        </div>
        <div class="about-title-container text-center">
          <p class="about-title glowAnime" id="about-title">
            <span>共感と創造の場、未来を育てる2つの種。</span>
          </p>
        </div>
      </div>
    </div>
    <div class="col-md-4 fluid-container">
      <a class="fluid" href="#section1"></a>
    </div>
  </div>
</div>


<div class="container-fluid mb-5">
  <div class="row">
    <div class="col-md-12 col-sm-12">
      <section id="section1">
        <div class="row">
          <div class="col-md-12">
            <h2 class="heading">当ウェブサイト『2Seeds』について</h2>
            <div class="heading-text">
              <p>2Seeds（ツーシーズ）は動画クリエイター向けのブログサイトです。
                基本コンセプトは、クリエイターが新たな視聴者を引き寄せる場として機能すると同時に、
                コンテンツをより詳細に伝えるメディアとしての役割を果たすことです。
                初めて動画制作を始めた駆け出しのクリエイター、コンテンツに興味を持つ読者向けにデザインしています。</p>
            </div>
          </div>
          <div class="col-md-4">
            <div class="first-point text-center">
              <i class="fas fa-pencil-ruler size"></i>
              <h3 class="point-title">ブログ投稿を手軽に実現</h3>
              <div class="box-text">
                <p>クリエイターが情報発信のハードルを下げ、時間と労力をかけずに、自分の動画コンテンツを素早く魅力的なブログ記事として発信できる環境を提供します。</p>
              </div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="second-point text-center">
              <i class="fas fa-hand-holding-heart size"></i>
              <h3 class="point-title">ブログを通じてクリエイターへの興味を育む</h3>
              <div class="box-text">
                <p>わかりやすく読みやすいブログ形式を採用し、クリエイターへの興味を引き起こす場所です。
               動画よりも手軽に情報を消化しやすく、クリエイターのストーリーやコンテンツに触れることで、
               新たなクリエイティブな興奮が生まれます。
               普段動画を見ない読者にも、ブログを通じてクリエイティブな世界への扉を開きます。</p>
              </div>
            </div>
          </div>
          <div class="col-md-4">
            <div class="third-point text-center">
              <i class="fas fa-seedling size"></i>
              <h3 class="point-title">クリエイターの成長とコンテンツの深化</h3>
              <div class="box-text">
                <p>YouTubeチャンネルが視聴回数を伸ばすのは難しい道のりです。ブログとYouTubeの両方を活用して、クリエイターの成長を支援します。
                  ブログを通じてコンテンツを発信し、視聴者とのコミュニケーションを深化させることで、YouTubeチャンネルの成長を促進します</p>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  </div>
</div>




<script>
  function GlowAnimeControl() {
    $('.glowAnime').each(function () {
      var elemPos = $(this).offset().top - 50;
      var scroll = $(window).scrollTop();
      var windowHeight = $(window).height();
      if (scroll >= elemPos - windowHeight) {
        $(this).addClass("glow");
      } else {
        $(this).removeClass("glow");
      }
    });
  }

  $(window).on('load', function () {
    var element = $(".glowAnime");
    element.each(function () {
      var text = $(this).text();
      var textbox = "";
      text.split('').forEach(function (t, i) {
        if (t !== " ") {
          if (i < 10) {
            textbox += '<span style="animation-delay: .' + i + 's;">' + t + '</span>';
          } else {
            var n = i / 10;
            textbox += '<span style="animation-delay: ' + n + 's;">' + t + '</span>';
          }
        } else {
          textbox += t;
        }
      });
      $(this).html(textbox);
    });

    GlowAnimeControl();
  });
</script>


<script>
var targets = document.querySelectorAll('.first-point, .second-point, .third-point');

// Intersection Observerの設定
var options = {
  root: null,
  rootMargin: '0px',
  threshold: 0.5
};

// Intersection Observerのコールバック
var callback = function(entries, observer) {
  entries.forEach(function(entry) {
    if (entry.isIntersecting) {
      // 要素がビューポートに入ったら一旦クラスを削除してから再度追加
      entry.target.classList.remove('fade-in');
      void entry.target.offsetWidth; // リフローをトリガー
      entry.target.classList.add('fade-in');
      // 一度だけ実行したい場合はObserverを無効にする
      observer.unobserve(entry.target);
    }
  });
};

// Intersection Observerの作成
var observer = new IntersectionObserver(callback, options);

// 各要素をObserverに追加
targets.forEach(function(target) {
  observer.observe(target);
});

</script>

<script>
$(document).ready(function() {
  $('.fluid').click(function() {
    var targetSectionId = $(this).attr('href');

    // セクションのIDを使ってスクロール
    $('html, body').animate({
      scrollTop: $(targetSectionId).offset().top
    }, 1000);

    return false; 
  });
});
</script>
